name: Build & Release Wheels

on:
  push:
    tags:
      - 'v*'       # e.g. v0.1.0
      - 'latest'

permissions:
  contents: write   # needed to create releases & upload assets

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.13']
    runs-on: ${{ matrix.os }}
    env:
      # cibuildwheel builds these four targets per‚Äêjob
      CIBW_BUILD: cp312-manylinux_x86_64 cp313-manylinux_x86_64 cp312-win_amd64 cp313-win_amd64
      CIBW_MANYLINUX_X86_64_IMAGE: ghcr.io/jonnypeace/manylinux_rust:latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build tools
        run: pip install maturin cibuildwheel

      - name: Build wheels
        run: cibuildwheel --output-dir wheelhouse .

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: wheelhouse/*.whl

  release:
    # run once per push-tag, after all matrix "build" jobs succeed
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-wheels/

      - name: 'Debug: list everything under all-wheels'
        run: |
          echo "=== file tree under ./all-wheels ==="
          find all-wheels -type f -print

      - name: Create GitHub Release & attach wheels
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }} Release
          files: all-wheels/**/*.whl
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
