name: Build Wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build_wheels:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.12", "3.13"]
    runs-on: ${{ matrix.os }}
    env:
      CIBW_BUILD: cp312-* cp313-*

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build wheels Linux
        if: runner.os == 'Linux'
        run: |
            set -e
            echo "Installing Rust..."
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            echo "Sourcing Cargo environment..."
            . "$HOME/.cargo/env"
            echo "PATH: $PATH"
            echo "rustc version: $(rustc --version)"
            cibuildwheel --output-dir wheelhouse .


      - name: Install Rust toolchain on Windows
        if: runner.os == 'Windows'
        run: |
            powershell -Command "Invoke-WebRequest -Uri https://win.rustup.rs -OutFile rustup-init.exe; Start-Process rustup-init.exe -ArgumentList '-y' -NoNewWindow -Wait; Remove-Item rustup-init.exe"
            # Optionally add Cargo to PATH (this may be automatic)
            powershell -Command "echo $env:USERPROFILE + '\\.cargo\\bin' | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append"

      - name: Build wheels Windows
        if: runner.os == 'Windows'
        run: |
            cibuildwheel --output-dir wheelhouse .
      
      # Optional: Upload wheels as artifacts for later download
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: wheelhouse/*
