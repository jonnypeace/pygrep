name: Build Wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build_wheels:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.12", "3.13"]
    runs-on: ${{ matrix.os }}
    env:
      # The below line means:
      #  - cp312-manylinux_x86_64  (Python 3.12 on Linux x86_64)
      #  - cp313-manylinux_x86_64  (Python 3.13 on Linux x86_64)
      #  - cp312-win_amd64         (Python 3.12 on Windows 64-bit)
      #  - cp313-win_amd64         (Python 3.13 on Windows 64-bit)
      CIBW_BUILD: cp312-manylinux_x86_64 cp313-manylinux_x86_64 cp312-win_amd64 cp313-win_amd64
      # The important part: set your custom Docker image for x86_64
      CIBW_MANYLINUX_X86_64_IMAGE: ghcr.io/jonnypeace/manylinux_rust:latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build wheels on Linux
        if: runner.os == 'Linux'
        run: |
          # We do NOT install Rust here, because the Docker container already has it
          # Just install Python-based dependencies and run cibuildwheel
          pip install maturin cibuildwheel
          cibuildwheel --output-dir wheelhouse .

      - name: Build wheels on Windows
        if: runner.os == 'Windows'
        run: |
          # Install Rust, etc.
          powershell -Command "Invoke-WebRequest -Uri https://win.rustup.rs -OutFile rustup-init.exe; Start-Process rustup-init.exe -ArgumentList '-y' -NoNewWindow -Wait; Remove-Item rustup-init.exe"
          powershell -Command "echo $env:USERPROFILE + '\\.cargo\\bin' | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append"
          pip install maturin cibuildwheel
          cibuildwheel --output-dir wheelhouse .
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: wheelhouse/*
